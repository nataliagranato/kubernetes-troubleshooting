apiVersion: v1
kind: Pod
metadata:
  name: pod-configmap-not-found
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      volumeMounts:
        - name: config-volume
          mountPath: /etc/config
  volumes:
    - name: config-volume
      configMap:
        name: non-existent-configmap
---
apiVersion: v1
kind: Pod
metadata:
  name: invalid-pod-spec
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      ports:
        - containerPort: invalid-port # Porta inválida
---
apiVersion: v1
kind: Pod
metadata:
  name: invalid-volume-spec
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      volumeMounts:
        - name: myvolume
          mountPath: /mnt/myvolume
  volumes:
    - name: myvolume
      emptyDir: {} # Especificação de volume inválida
---
apiVersion: v1
kind: Pod
metadata:
  name: invalid-request
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      resources:
        limits:
          memory: invalid-memory # Limite de memória inválido
---
apiVersion: v1
kind: Service
metadata:
  name: invalid-service-type
  namespace: config-errs
spec:
  type: InvalidType # Tipo de serviço inválido
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9376
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-secret-not-found
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      env:
        - name: SECRET_ENV
          valueFrom:
            secretKeyRef:
              name: non-existent-secret
              key: key
---
apiVersion: v1
kind: Pod
metadata:
  name: pvc-not-found
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      volumeMounts:
        - name: myvolume
          mountPath: /mnt/myvolume
  volumes:
    - name: myvolume
      persistentVolumeClaim:
        claimName: non-existent-pvc
---
apiVersion: v1
kind: Pod
metadata:
  name: volume-not-found
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      volumeMounts:
        - name: myvolume
          mountPath: /mnt/myvolume
  volumes:
    - name: myvolume # Volume não encontrado
---
apiVersion: v1
kind: Pod
metadata:
  name: volume-permission-denied
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      volumeMounts:
        - name: myvolume
          mountPath: /mnt/myvolume
  volumes:
    - name: myvolume
      hostPath:
        path: /root # Assumindo que o diretório /root não é acessível
---
apiVersion: v1
kind: Pod
metadata:
  name: container-config-error
  namespace: config-errs
spec:
  containers:
    - name: mycontainer
      image: nginx
      command: ["/bin/bash", "-c", "echo Hello"] # Incorrect command for nginx
---
apiVersion: v1
kind: Service
metadata:
  name: duplicate-service
  namespace: config-errs
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9376
---
apiVersion: v1
kind: Service
metadata:
  name: duplicate-service # Nome de serviço duplicado
  namespace: config-errs
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 9377
